@{
    @using Microsoft.AspNetCore.Identity
    @inject NavigationManager NavigationManager
    @inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment _env
    @inject Data.ApplicationDbContext _appContext
    string oUser = "";
    try
    {
        oUser = _appContext._httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.Name).Value;

    }
    catch (Exception ex)
    {
        string sError = ex.Message;
    }
    string sIdBranch = "";
    string sIdInternalRole = "";
    try
    {
        using (var context = new Data.SQLContext())
        {
            var conn = context.Database.GetDbConnection();
            conn.Open();
            var command = conn.CreateCommand();

            string query = "SELECT id_branch, id_internal_role FROM branches_roles  WHERE email_member = '" + oUser + "'";
            command.CommandText = query;
            var reader = command.ExecuteReader();

            while (reader.Read())
            {
                sIdBranch = reader.GetValue("id_branch").ToString();
                sIdInternalRole = reader.GetValue("id_internal_role").ToString();
            }
            
            conn.Close();
            if (sIdBranch.Length <= 0)
            {
                NavigationManager.NavigateTo("Home");
            }
        }
    }
    catch (Exception ex)
    {
        string sError = ex.Message;
    }
}
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">eCable Services</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        
        <AuthorizeView>
            <Authorized>
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 3)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="contracts">
                            <span class="oi oi-document" aria-hidden="true"></span> Alta de Contratos
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="modcontracts">
                            <span class="oi oi-document" aria-hidden="true"></span> Editar Contratos
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 4)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="collectors">
                            <span class="oi oi-briefcase" aria-hidden="true"></span> Cobradores
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 5)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="installers">
                            <span class="oi oi-document" aria-hidden="true"></span> Técnicos
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 6)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="technicalorders">
                            <span class="oi oi-calendar" aria-hidden="true"></span> Generador OTs
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 7)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="cashiers">
                            <span class="oi oi-dollar" aria-hidden="true"></span> Cajeros
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 9)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="collectionsgen">
                            <span class="oi oi-calendar" aria-hidden="true"></span> Generador Cobros
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 11)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="applications">
                            <span class="oi oi-arrow-right" aria-hidden="true"></span> Aplicaciones
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 2)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="warehouse">
                            <span class="oi oi-cart" aria-hidden="true"></span> Bodega
                        </NavLink>
                    </li>
                }
                @if (sIdInternalRole.Length > 0)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="reports">
                            <span class="oi oi-print" aria-hidden="true"></span> Reportes
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 12)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="callcenter">
                            <span class="oi oi-phone" aria-hidden="true"></span> Call Center
                        </NavLink>
                    </li>
                }
                @if (int.Parse(sIdInternalRole) == 1 || int.Parse(sIdInternalRole) == 14)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="settings">
                            <span class="oi oi-phone" aria-hidden="true"></span> Configurar
                        </NavLink>
                    </li>
                }

                <li class="nav-item">
                    <NavLink class="nav-link" href="Identity/Account/Manage/Index">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Mi Cuenta
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="Identity/Account/LogOut">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Cerrar Sesión
                    </NavLink>
                </li>
            </Authorized>
            <NotAuthorized>
                <li class="nav-item">
                    <NavLink class="nav-link" href="Identity/Account/Register">
                        <span class="oi oi-plus" aria-hidden="true"></span> Registrarse
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="Identity/Account/Login">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Iniciar Sesión
                    </NavLink>
                </li>
            </NotAuthorized>

        </AuthorizeView>
    </ul>
</div>

@code {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
